{"version":3,"file":"static/js/605.96a73bfc.chunk.js","mappings":"mPAKA,EALqB,CACnBA,MAAO,GACPC,SAAU,I,UCeZ,EAjBe,CACbD,MAAO,CACLE,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,aACPC,YAAa,cAEfL,SAAU,CACRC,KAAM,eACNC,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,kBCZjB,EAAuB,wB,UCgCvB,EAvBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBZ,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAEf,OACE,kBAAMM,SAAUK,EAAcC,UAAWC,EAAzC,WACE,SAACC,EAAA,GAAD,QAAWC,MAAOhB,EAAOW,aAAcA,GAAkBM,EAAAA,SACzD,SAACF,EAAA,GAAD,QACEC,MAAOf,EACPU,aAAcA,GACVM,EAAAA,YAEN,SAACC,EAAA,EAAD,CAAQhB,KAAK,SAASiB,QAAQ,YAA9B,qBAKL,EC9BD,EAA0B,2BAA1B,EAA6D,yBCkC7D,EAvBkB,WAGhB,IAAMC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,iBAAKV,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,yBACA,SAAC,EAAD,CAAWP,SAZG,SAAAiB,GAClBJ,GAASK,EAAAA,EAAAA,IAAMD,GAChB,QAcF,C,mGChCD,EAA0B,2BAA1B,EAA6D,yB,qCCoB7D,EAhBkB,SAAC,GAAuC,IAArCnB,EAAoC,EAApCA,MAAOM,EAA6B,EAA7BA,aAAiBe,GAAY,YACjDC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEnC,OACE,iBAAKhB,UAAWC,EAAhB,WACE,kBAAOgB,QAASH,EAAhB,SAAqBtB,KACrB,0BACEQ,UAAWC,EACXa,GAAIA,EACJI,SAAUpB,GACNe,MAIX,C,kECOD,IAxBgB,SAAC,GAAgC,IAA9BjB,EAA6B,EAA7BA,aAAcF,EAAe,EAAfA,SAC/B,GAA0ByB,EAAAA,EAAAA,WAAS,UAAKvB,IAAxC,eAAOC,EAAP,KAAcuB,EAAd,KAoBA,MAAO,CAAEvB,MAAAA,EAAOuB,SAAAA,EAAUtB,aAlBL,SAAC,GAAgB,IAAduB,EAAa,EAAbA,OACtBD,GAAS,SAAAE,GACP,IAAQhC,EAA+B+B,EAA/B/B,KAAMa,EAAyBkB,EAAzBlB,MAAOoB,EAAkBF,EAAlBE,QACfC,EAAoB,aADaH,EAAThC,KACSkC,EAAUpB,EAEjD,OAAO,kBACFmB,GADL,cAEGhC,EAAOkC,GAEX,GACF,EAQuCzB,aANnB,SAAA0B,GACnBA,EAAMC,iBACNhC,GAAS,UAAKG,IACduB,GAAS,UAAKxB,GACf,EAGF,C","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.js","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'tpasswordext',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\"};","import Button from '@mui/material/Button';\nimport useForm from 'shared/hooks/useForm';\n\nimport initialState from './initialState';\nimport TextField from 'shared/components/TextField/TextField';\nimport fields from './fields';\n// import Button from 'shared/components/Button/Button';\n\nimport css from './LoginForm.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Login\n      </Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"LoginPage_wrapper__ewWJj\",\"title\":\"LoginPage_title__RBt-o\"};","import { useDispatch } from 'react-redux';\n// import { Navigate } from 'react-router-dom';\n\nimport { Container } from '@mui/material';\n\nimport { login } from 'Redux/auth/auth-operations';\n// import { isUserLogin } from 'Redux/auth/auth-selectors';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nimport css from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  // const isLogin = useSelector(isUserLogin);\n\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  // if (isLogin) {\n  //   return <Navigate to=\"/contacts\" />;\n  // }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <div className={css.wrapper}>\n        <h2 className={css.title}>Login page</h2>\n        <LoginForm onSubmit={handleLogin} />\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n\n// const LoginPage = () => {\n//   return <LoginForm />;\n// };\n\n// export default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"input\":\"TextField_input__Oi20a\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id}>{label}</label>\n      <input\n        className={css.input}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      ></input>\n    </div>\n  );\n};\n\nexport default TextField;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n\n      return {\n        ...prevState,\n        [name]: newValue,\n      };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["email","password","type","name","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","css","TextField","value","fields","Button","variant","dispatch","useDispatch","Container","maxWidth","data","login","props","id","useMemo","nanoid","htmlFor","onChange","useState","setState","target","prevState","checked","newValue","event","preventDefault"],"sourceRoot":""}