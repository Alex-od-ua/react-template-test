{"version":3,"file":"static/js/533.84e82cf3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Movies/MovieSearch/MovieSearchForm/MovieSearchForm.module.css?9908","components/Movies/MovieSearch/MovieSearchForm/MovieSearchForm.jsx","webpack://react-homework-template/./src/components/Movies/MovieSearch/MovieSearchList/MovieSearchList.module.css?a1a8","components/Movies/MovieSearch/MovieSearchList/MovieSearchList.jsx","components/Movies/MovieSearch/MovieSearch.jsx","pages/MoviesFinderPage/MoviesFinderPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"MovieSearchForm_Searchbar__yN+9j\",\"SearchForm\":\"MovieSearchForm_SearchForm__8wnd0\",\"SearchForm__button\":\"MovieSearchForm_SearchForm__button__8jgkl\",\"SearchForm__button__label\":\"MovieSearchForm_SearchForm__button__label__DCkLJ\",\"SearchForm__input\":\"MovieSearchForm_SearchForm__input__KvN4l\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { FcSearch } from 'react-icons/fc';\n\nimport css from './MovieSearchForm.module.css';\n\nconst MovieSearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = event => setSearch(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(search);\n  };\n  return (\n    <header className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.SearchForm__button}>\n          <span className={css.SearchForm__button__label}>Search</span>\n          <FcSearch />\n        </button>\n\n        <input\n          className={css.SearchForm__input}\n          name=\"search\"\n          type=\"text\"\n          value={search}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          required\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default MovieSearchForm;\n\nMovieSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieSearchList_list__ciUpb\",\"item\":\"MovieSearchList_item__jzRf-\",\"link\":\"MovieSearchList_link__CIbxd\"};","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport css from './MovieSearchList.module.css';\n\nconst MovieSearchList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ title, id }) => (\n    <li key={id} className={css.item}>\n      <Link\n        className={css.link}\n        state={{ from: location }}\n        to={`/movies-finder/${id}`}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul className={css.list}>{elements}</ul>;\n};\n\nexport default MovieSearchList;\n\nMovieSearchList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { searchMovies } from 'shared/services/movies-api';\nimport MovieSearchForm from './MovieSearchForm/MovieSearchForm';\nimport MovieSearchList from './MovieSearchList/MovieSearchList';\n\nimport Loader from 'shared/components/Loader/Loader';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!search) {\n        return;\n      }\n      try {\n        setLoading(true);\n        const results = await searchMovies(search);\n        setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n        console.log(response.data.message);\n        toast.error(`${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const onSearchMovies = search => {\n    setSearchParams({ search });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h1>error</h1>}\n      <MovieSearchForm onSubmit={onSearchMovies} />\n      {movies && <MovieSearchList movies={movies} />}\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default MovieSearch;\n","import { Container } from '@mui/material';\n\nimport MovieSearch from 'components/Movies/MovieSearch/MovieSearch';\n\nconst MoviesFinderPage = () => {\n  return (\n    <Container maxWidth=\"xl\">\n      <MovieSearch />\n    </Container>\n  );\n};\n\nexport default MoviesFinderPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '5bbf892bcd99762773ec3ce2eced7cd4',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getAllMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/all/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}//reviews?`);\n  return data.results;\n};\n\n// api key: 5bbf892bcd99762773ec3ce2eced7cd4\n\n//https://api.themoviedb.org/3/movie/550?api_key=5bbf892bcd99762773ec3ce2eced7cd4\n"],"names":["onSubmit","useState","search","setSearch","className","css","event","preventDefault","type","name","value","autoComplete","autoFocus","onChange","target","required","movies","location","useLocation","elements","map","title","id","state","from","to","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","searchMovies","results","response","data","message","console","log","toast","Loader","Container","maxWidth","instance","axios","baseURL","params","api_key","query","getAllMovies","page","getMovieById","movieId","getCasts","cast","getReviews"],"sourceRoot":""}