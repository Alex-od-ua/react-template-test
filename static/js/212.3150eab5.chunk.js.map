{"version":3,"file":"static/js/212.3150eab5.chunk.js","mappings":"uQAEMA,G,gBAAWC,EAAAA,OAAa,CAC5BC,QAAS,0BAETC,OAAQ,CACNC,SAAU,GACVC,IAAK,qCACLC,WAAY,QACZC,YAAa,iBAIJC,EAAY,mCAAG,WAAOC,GAAP,8FAAUC,EAAV,+BAAiB,EAAjB,SACHV,EAASW,IAAI,MAAO,CACzCR,OAAQ,CACNM,EAAAA,EACAC,KAAAA,KAJsB,uBAClBE,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,MAPc,2CAAH,sD,oECZzB,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAyH,sCAAzH,EAA2L,6CAA3L,EAA4P,qC,UCM/OC,EAAb,gMACEC,MAAQ,CACNC,OAAQ,IAFZ,EAKEC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,EAAKC,UAAL,UAAiBF,EAAOC,GACzB,EARH,EAUEE,aAAe,SAAAC,GACbA,EAAEC,kBAIFC,EAFqB,EAAKC,MAAlBD,WAEC,UAAK,EAAKV,OAEpB,EAjBH,uCAyBE,WACE,IAAQC,EAAWW,KAAKZ,MAAhBC,OACAC,EAA+BU,KAA/BV,aAAcK,EAAiBK,KAAjBL,aAEtB,OACE,mBAAQM,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAgBJ,SAAUH,EAA3C,WACE,oBAAQQ,KAAK,SAASF,UAAWC,EAAjC,WACE,iBAAMD,UAAWC,EAAjB,qBACA,SAAC,MAAD,QAGF,kBACED,UAAWC,EACXV,KAAK,SACLW,KAAK,OACLV,MAAOJ,EACPe,aAAa,MACbC,WAAS,EACTC,SAAUhB,EACViB,UAAQ,QAKjB,KAlDH,GAA+BC,EAAAA,WCN/B,EAAmC,2CAAnC,EAAwG,kDCE3FC,EAAmB,SAAC,GAK1B,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEA,OACE,eACEC,QAAS,kBAAMD,EAAY,CAAEE,IAAKJ,EAAMK,IAAKJ,GAApC,EACTX,UAAWC,EAFb,UAIE,gBACED,UAAWC,EACXc,IAAKN,EACLK,IAAKJ,KAIZ,ECpBD,EAA+B,mCCKlBM,EAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUL,EAAkB,EAAlBA,YACvC,OACE,eAAIZ,UAAWC,EAAf,SACGgB,EAASC,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIR,EAAwC,EAAxCA,aAAcF,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAChD,OACE,SAACF,EAAD,CAEEW,GAAIA,EACJR,aAAcA,EACdF,cAAeA,EACfC,KAAMA,EACNE,YAAaA,GALRO,EAQV,KAGN,EAEDH,EAAaI,aAAe,CAC1BH,SAAU,I,cCzBZ,EAAyB,uBCEZI,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,mBAAQT,QAASS,EAAUtB,UAAWC,EAAYC,KAAK,SAAvD,sBAIH,E,UCRD,EAA0B,uBAA1B,EAAyD,qBCMnDqB,EAAYC,SAASC,cAAc,eAE5BC,EAAb,gMASEC,WAAa,YAAsC,IAAnCrC,EAAkC,EAAlCA,OAAQsC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KACjCvC,IAAWsC,GAA0B,WAATC,GAC9B,EAAK/B,MAAM6B,YAEd,EAbH,kDACE,WACEG,OAAOC,iBAAiB,UAAWhC,KAAK4B,WACzC,GAHH,kCAKE,WACEG,OAAOE,oBAAoB,UAAWjC,KAAK4B,WAC5C,GAPH,oBAeE,WACE,IAAQA,EAAe5B,KAAf4B,WACR,EAEI5B,KAAKD,MADPmC,aAAgBnB,EADlB,EACkBA,IAAKC,EADvB,EACuBA,IAIvB,OAFAmB,QAAQC,IAAIpC,KAAKD,MAAMmC,eAEhBG,EAAAA,EAAAA,eACL,gBAAKpC,UAAWC,EAAaY,QAASc,EAAtC,UACE,gBAAK3B,UAAWC,EAAhB,UACE,gBAAKc,IAAKA,EAAKD,IAAKA,QAGxBS,EAEH,KA9BH,GAA2BhB,EAAAA,WCR3B,GAAgB,IAAM,yBAAyB,UAAY,+BAA+B,WAAa,gCAAgC,oBAAoB,uCAAuC,0BAA0B,6CAA6C,mBAAmB,sCAAsC,QAAU,6BAA6B,MAAQ,4BCc1W,SAAS8B,IACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlD,EAAP,KAAemD,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOxD,EAAP,KAAa0D,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOrB,EAAP,KAAiBwB,EAAjB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAAwCP,EAAAA,EAAAA,UAAS,MAAjD,eAAOL,EAAP,KAAqBa,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAK3D,EAAL,CAGA,IAAM4D,EAAa,mCAAG,oGAElBL,GAAW,GAFO,SAIC/D,EAAaQ,EAAQN,GAJtB,OAME,KAFdG,EAJY,QAMTgE,QACPC,EAAAA,GAAAA,MAAY,yCAEdT,GAAY,SAAAU,GAAY,wBAAQA,IAAR,OAAyBlE,GAAzB,IATN,gDAWlB4D,EAAS,KAAMO,SAXG,yBAalBT,GAAW,GAbO,4EAAH,qDAgBnBK,GAjBC,CAkBF,GAAE,CAAC5D,EAAQN,IAwBZ,OACE,4BACE,SAACI,EAAD,CAAWW,SAxBQ,SAAAwD,GACjBA,IAAUjE,GAIdmD,EAAUc,GACVZ,EAAY,IACZD,EAAQ,IALNU,EAAAA,GAAAA,KAAW,0BAMd,IAkBIN,IAAS,cAAG5C,UAAWC,EAAAA,aAAd,SAAiC2C,IAC1CF,IAAW,SAACY,EAAA,EAAD,IACXtC,IACC,SAACA,EAAD,CAAcC,SAAUA,EAAUL,YAnBpB,SAAA2C,GAClBT,EAAgBS,EACjB,KAmBG,gBAAKvD,UAAWC,EAAAA,IAAhB,SACGuD,QAAQvC,EAASgC,UAAYP,IAAW,SAACrB,EAAD,CAAQC,SAdtC,WACfkB,GAAQ,SAAAiB,GAAQ,OAAIA,EAAW,CAAf,GACjB,MAcIxB,IACC,SAACP,EAAD,CAAOO,aAAcA,EAAcN,WArBtB,WACjBmB,EAAgB,KACjB,KAqBG,SAAC,KAAD,MAGL,CClFD,IAQA,EARwB,WACtB,OACE,SAACY,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,SAACtB,EAAD,KAGL,C","sources":["shared/services/image-api.js","webpack://react-homework-template/./src/components/ImageFinder/Searchbar/SearchBar.module.css?f85d","components/ImageFinder/Searchbar/Searchbar.js","webpack://react-homework-template/./src/components/ImageFinder/ImageGalleryItem/ImageGalleryItem.module.css?db0a","components/ImageFinder/ImageGalleryItem/ImageGalleryItem.js","webpack://react-homework-template/./src/components/ImageFinder/ImageGallery/ImageGallery.module.css?f9e1","components/ImageFinder/ImageGallery/ImageGallery.js","webpack://react-homework-template/./src/components/ImageFinder/Button/Button.module.css?8be9","components/ImageFinder/Button/Button.js","webpack://react-homework-template/./src/components/ImageFinder/Modal/Modal.module.css?4e80","components/ImageFinder/Modal/Modal.js","webpack://react-homework-template/./src/components/ImageFinder/ImageFinder.module.css?5dad","components/ImageFinder/ImageFinder.jsx","pages/ImageFinderPage/ImageFinderPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://pixabay.com/api',\n\n  params: {\n    per_page: 12,\n    key: '31939981-403d02160b0621624e665fa7a',\n    image_type: 'photo',\n    orientation: 'horizontal',\n  },\n});\n\nexport const searchImages = async (q, page = 1) => {\n  const { data } = await instance.get('/?&', {\n    params: {\n      q,\n      page,\n    },\n  });\n  return data.hits;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchBar_Searchbar__pSoBj\",\"SearchForm\":\"SearchBar_SearchForm__zX2OJ\",\"SearchForm__button\":\"SearchBar_SearchForm__button__VEmu3\",\"SearchForm__button__label\":\"SearchBar_SearchForm__button__label__A1eia\",\"SearchForm__input\":\"SearchBar_SearchForm__input__9M04N\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FcSearch } from 'react-icons/fc';\n\nimport css from './SearchBar.module.css';\n\nexport class Searchbar extends Component {\n  state = {\n    search: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit({ ...this.state });\n    // this.reset();\n  };\n\n  // reset() {\n  //   this.setState({\n  //     search: '',\n  //   });\n  // }\n\n  render() {\n    const { search } = this.state;\n    const { handleChange, handleSubmit } = this;\n\n    return (\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.SearchForm__button}>\n            <span className={css.SearchForm__button__label}>Search</span>\n            <FcSearch />\n          </button>\n\n          <input\n            className={css.SearchForm__input}\n            name=\"search\"\n            type=\"text\"\n            value={search}\n            autoComplete=\"off\"\n            autoFocus\n            onChange={handleChange}\n            required\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__MEcGL\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__18B84\"};","import PropTypes from 'prop-types';\nimport css from './ImageGalleryItem.module.css';\n\nexport const ImageGalleryItem = ({\n  largeImageURL,\n  tags,\n  webformatURL,\n  showPicture,\n}) => {\n  return (\n    <li\n      onClick={() => showPicture({ alt: tags, src: webformatURL })}\n      className={css.ImageGalleryItem}\n    >\n      <img\n        className={css.ImageGalleryItem__image}\n        src={largeImageURL}\n        alt={tags}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  showPicture: PropTypes.func.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ImageGallery\":\"ImageGallery_ImageGallery__HEayp\"};","import { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nimport PropTypes from 'prop-types';\n\nimport css from './ImageGallery.module.css';\n\nexport const ImageGallery = ({ pictures, showPicture }) => {\n  return (\n    <ul className={css.ImageGallery}>\n      {pictures.map(({ id, webformatURL, largeImageURL, tags }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            id={id}\n            webformatURL={webformatURL}\n            largeImageURL={largeImageURL}\n            tags={tags}\n            showPicture={showPicture}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nImageGallery.defaultProps = {\n  pictures: [],\n};\n\nImageGallery.propTypes = {\n  showPicture: PropTypes.func.isRequired,\n  pictures: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__VJyz0\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nexport const Button = ({ loadMore }) => {\n  return (\n    <button onClick={loadMore} className={css.Button} type=\"button\">\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__piz+F\",\"modal\":\"Modal_modal__Gse+J\"};","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\n\nimport css from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModal);\n  }\n\n  closeModal = ({ target, currentTarget, code }) => {\n    if (target === currentTarget || code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    const { closeModal } = this;\n    const {\n      currentImage: { alt, src },\n    } = this.props;\n    console.log(this.props.currentImage);\n\n    return createPortal(\n      <div className={css.overlay} onClick={closeModal}>\n        <div className={css.modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ImageFinder_btn__g4I+m\",\"Searchbar\":\"ImageFinder_Searchbar__TH+Yp\",\"SearchForm\":\"ImageFinder_SearchForm__sLgLP\",\"SearchForm-button\":\"ImageFinder_SearchForm-button__BAJCZ\",\"SearchForm-button-label\":\"ImageFinder_SearchForm-button-label__6Rbne\",\"SearchForm-input\":\"ImageFinder_SearchForm-input__r1A2E\",\"Overlay\":\"ImageFinder_Overlay__xierR\",\"Modal\":\"ImageFinder_Modal__bv9Ol\"};","import { useState, useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { searchImages } from 'shared/services/image-api';\n\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport Loader from 'shared/components/Loader/Loader';\nimport { Button } from './Button/Button';\nimport { Modal } from './Modal/Modal';\n\nimport css from './ImageFinder.module.css';\n\nexport function ImageFinder() {\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [pictures, setPictures] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentImage, setCurrentImage] = useState(null);\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchPictures = async () => {\n      try {\n        setLoading(true);\n\n        const hits = await searchImages(search, page);\n\n        if (hits.length === 0) {\n          toast.error('Sorry, there are no available images.');\n        }\n        setPictures(prevPictures => [...prevPictures, ...hits]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPictures();\n  }, [search, page]);\n\n  const searchPictures = query => {\n    if (query === search) {\n      toast.warn('This is the same query!');\n      return;\n    }\n    setSearch(query);\n    setPictures([]);\n    setPage(1);\n  };\n\n  const showPicture = img => {\n    setCurrentImage(img);\n  };\n\n  const closeModal = () => {\n    setCurrentImage(null);\n  };\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={searchPictures} />\n\n      {error && <p className={css.errorMassage}>{error}</p>}\n      {loading && <Loader />}\n      {ImageGallery && (\n        <ImageGallery pictures={pictures} showPicture={showPicture} />\n      )}\n      <div className={css.btn}>\n        {Boolean(pictures.length) && !loading && <Button loadMore={loadMore} />}\n      </div>\n      {currentImage && (\n        <Modal currentImage={currentImage} closeModal={closeModal} />\n      )}\n      <ToastContainer />\n    </div>\n  );\n}\n\n// export class ImageFinder extends Component {\n//   state = {\n//     search: '',\n//     page: 1,\n//     pictures: [],\n//     loading: false,\n//     error: null,\n//     currentImage: null,\n//     status: 'idle',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     // const prevSearchValue = prevProps.search;\n//     // const nextSearchValue = this.state.search;\n//     const { search, page } = this.state;\n//     if (prevState.search !== search || prevState.page !== page) {\n//       this.fetchPictures();\n//     }\n//   }\n\n//   async fetchPictures() {\n//     try {\n//       this.setState({ loading: true });\n//       const { search, page } = this.state;\n\n//       const hits = await searchImages(search, page);\n\n//       if (hits.length === 0) {\n//         toast.error('Sorry, there are no available images.');\n//       }\n\n//       this.setState(({ pictures }) => ({\n//         pictures: [...pictures, ...hits],\n//       }));\n//     } catch (error) {\n//       this.setState({ error: error.message, pictures: [] });\n//     } finally {\n//       this.setState({ loading: false });\n//     }\n//   }\n\n//   searchPictures = ({ search }) => {\n//     if (search === this.state.search) {\n//       toast.error('This is the same query!');\n//       return;\n//     }\n\n//     this.setState({ search, pictures: [], page: 1 });\n//   };\n\n//   showPicture = img => {\n//     this.setState({\n//       currentImage: img,\n//     });\n//   };\n\n//   closeModal = () => {\n//     this.setState({ currentImage: null });\n//   };\n\n//   loadMore = () => {\n//     this.setState(({ page }) => ({ page: page + 1 }));\n//   };\n\n//   render() {\n//     const { loading, error, pictures, currentImage } = this.state;\n//     const { searchPictures, loadMore, showPicture, closeModal } = this;\n\n//     return (\n//       <>\n//         {/* <div className={css.App}> */}\n//         <Searchbar onSubmit={searchPictures} />\n//         {error && <p>{error}</p>}\n//         {loading && <Loader />}\n//         {ImageGallery && (\n//           <ImageGallery pictures={pictures} showPicture={showPicture} />\n//         )}\n//         <div className={css.btn}>\n//           {Boolean(pictures.length) && !loading && (\n//             <Button loadMore={loadMore} />\n//           )}\n//         </div>\n//         {currentImage && (\n//           <Modal currentImage={currentImage} closeModal={closeModal} />\n//         )}\n//         <ToastContainer />\n//         {/* </div> */}\n//       </>\n//     );\n//   }\n// }\n","import { Container } from '@mui/material';\n\nimport { ImageFinder } from 'components/ImageFinder/ImageFinder';\n\nconst ImageFinderPage = () => {\n  return (\n    <Container maxWidth=\"xl\">\n      <ImageFinder />\n    </Container>\n  );\n};\n\nexport default ImageFinderPage;\n"],"names":["instance","axios","baseURL","params","per_page","key","image_type","orientation","searchImages","q","page","get","data","hits","Searchbar","state","search","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","onSubmit","props","this","className","css","type","autoComplete","autoFocus","onChange","required","Component","ImageGalleryItem","largeImageURL","tags","webformatURL","showPicture","onClick","alt","src","ImageGallery","pictures","map","id","defaultProps","Button","loadMore","modalRoot","document","querySelector","Modal","closeModal","currentTarget","code","window","addEventListener","removeEventListener","currentImage","console","log","createPortal","ImageFinder","useState","setSearch","setPage","setPictures","loading","setLoading","error","setError","setCurrentImage","useEffect","fetchPictures","length","toast","prevPictures","message","query","Loader","img","Boolean","prevPage","Container","maxWidth"],"sourceRoot":""}