{"version":3,"file":"static/js/287.be67e33b.chunk.js","mappings":"gRACA,EAAuB,uBAAvB,EAAsD,wB,oBC8BtD,EA1BiB,SAAC,GAAgB,IAC1BA,EADyB,EAAbC,OACKC,KAAI,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,GAAhC,OACzB,2BACE,gBACEC,IACEF,EAAY,0CAC2BA,GAD3B,UAELG,GAETC,IAAKL,EACLM,QAAQ,OACRC,MAAM,WAER,eAAIC,UAAWC,EAAf,SAA2BT,MAXpBE,EADgB,IAgB3B,OACE,+BACE,0BACE,eAAIM,UAAWC,EAAf,SAA0BZ,OAIjC,E,UCuBD,EA1Ca,WACX,OAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOJ,EAAP,KAAgBS,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA2BR,OAzBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAKfJ,GAAW,GALI,UAMMK,EAAAA,EAAAA,IAASJ,GANf,OAMTK,EANS,OAOfT,EAASS,GAEa,IAAlBA,EAAOC,SACTC,EAAAA,EAAAA,IAAM,yBAVO,gDAYNC,EAZM,KAYNA,SACTV,EAASU,EAASC,KAAKC,SACvBC,QAAQC,IAAIJ,EAASC,KAAKC,SAC1BH,EAAAA,GAAAA,MAAA,UAAeC,EAASC,KAAKC,UAfd,yBAiBfX,GAAW,GAjBI,4EAAH,qDAoBhBI,GAED,GAAE,CAACP,KAGF,gCACGC,IAAS,cAAGL,UAAU,GAAb,SAAiBK,IAC1BP,IAAW,SAACuB,EAAA,EAAD,IACXlB,IAAS,SAAC,EAAD,CAAUb,OAAQa,KAC5B,SAAC,KAAD,MAGL,C,wLChDKmB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,iBAAkB,CACpDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBX,EADkB,EAClBA,KADkB,kBAOnBA,EAAKa,SAPc,2CAAH,sDAUZC,EAAY,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACHV,EAASO,IAAI,qBAAsB,CACxDJ,OAAQ,CACNO,KAAAA,KAHsB,uBAClBf,EADkB,EAClBA,KADkB,kBAMnBA,EAAKa,SANc,2CAAH,qDASZG,EAAY,mCAAG,WAAMzB,GAAN,yFACHc,EAASO,IAAT,iBAAuBrB,EAAvB,MADG,uBAClBS,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZL,EAAQ,mCAAG,WAAMJ,GAAN,yFACCc,EAASO,IAAT,iBAAuBrB,EAAvB,cADD,uBACdS,EADc,EACdA,KADc,kBAEfA,EAAKiB,MAFU,2CAAH,sDAKRC,EAAU,mCAAG,WAAM3B,GAAN,yFACDc,EAASO,IAAT,iBAAuBrB,EAAvB,eADC,uBAChBS,EADgB,EAChBA,KADgB,kBAEjBA,EAAKa,SAFY,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Movies/Cast/CastList/CastList.module.css?8969","components/Movies/Cast/CastList/CastList.jsx","components/Movies/Cast/Cast.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CastList_item__UtI9B\",\"title\":\"CastList_title__f7U2s\"};","import PropTypes from 'prop-types';\n\nimport css from './CastList.module.css';\nimport tempImage from '../tempImage.png';\n\nconst CastList = ({ movies }) => {\n  const element = movies.map(({ original_name, profile_path, id }) => (\n    <li key={id}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n            : `${tempImage}`\n        }\n        alt={original_name}\n        loading=\"lazy\"\n        width=\"150px\"\n      />\n      <h3 className={css.title}>{original_name}</h3>\n    </li>\n  ));\n\n  return (\n    <>\n      <div>\n        <ul className={css.item}>{element}</ul>\n      </div>\n    </>\n  );\n};\n\nexport default CastList;\n\nCastList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getCasts } from 'shared/services/movies-api';\nimport CastList from './CastList/CastList';\nimport Loader from 'shared/components/Loader/Loader';\n\nconst Cast = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      // if (movie.length !== 0) {\n      //   return;\n      // }\n      try {\n        setLoading(true);\n        const result = await getCasts(movieId);\n        setMovie(result);\n\n        if (result.length === 0) {\n          toast('Sorry, cast not found');\n        }\n      } catch ({ response }) {\n        setError(response.data.message);\n        console.log(response.data.message);\n        toast.error(`${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setMovie]);\n\n  return (\n    <>\n      {error && <p className=\"\">{error}</p>}\n      {loading && <Loader />}\n      {movie && <CastList movies={movie} />}\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '5bbf892bcd99762773ec3ce2eced7cd4',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getAllMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/all/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}//reviews?`);\n  return data.results;\n};\n\n// api key: 5bbf892bcd99762773ec3ce2eced7cd4\n\n//https://api.themoviedb.org/3/movie/550?api_key=5bbf892bcd99762773ec3ce2eced7cd4\n"],"names":["element","movies","map","original_name","profile_path","id","src","tempImage","alt","loading","width","className","css","useState","movie","setMovie","error","setError","setLoading","movieId","useParams","useEffect","fetchMovie","getCasts","result","length","toast","response","data","message","console","log","Loader","instance","axios","baseURL","params","api_key","searchMovies","query","get","results","getAllMovies","page","getMovieById","cast","getReviews"],"sourceRoot":""}